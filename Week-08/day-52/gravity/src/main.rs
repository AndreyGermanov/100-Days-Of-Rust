fn switch_gravity<'a>(input: &mut Vec<&'a[&'a str]>) -> &'a Vec<&'a[&'a str]> {
    for index in 0..input.len() / 2 {
        input.swap(index,input.len()-index-1);
    }
    return input;
}

#[test]
fn test_switch_gravity() {
    assert_eq!(switch_gravity(
    &mut vec![&["-", "#", "#", "-"],
                    &["-", "-", "-", "-"],
                    &["-", "-", "-", "-"],
                    &["-", "-", "-", "-"]]),
           vec![&["-", "-", "-", "-"],
                &["-", "-", "-", "-"],
                &["-", "-", "-", "-"],
                &["-", "#", "#", "-"]
           ]
    );
    assert_eq!(switch_gravity(
        &mut vec![&["-", "#", "#", "-"],
                        &["-", "-", "#", "-"],
                        &["-", "-", "-", "-"]]),
               vec![&["-", "-", "-", "-"],
                    &["-", "-", "#", "-"],
                    &["-", "#", "#", "-"]
               ]
    );
    assert_eq!(
        switch_gravity(&mut vec![&["-", "#", "#", "#", "#", "-"],
                                       &["#", "-", "-", "#", "#", "-"],
                                       &["-", "#", "-", "-", "-", "-"],
                                       &["-", "-", "-", "-", "-", "-"]
        ]), vec![&["-", "-", "-", "-", "-", "-"],
                &["-", "#", "-", "-", "-", "-"],
                &["#", "-", "-", "#", "#", "-"],
                &["-", "#", "#", "#", "#", "-"]
           ]
    );
}